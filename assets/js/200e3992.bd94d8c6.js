"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[617],{3481:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>o,frontMatter:()=>d,metadata:()=>l,toc:()=>a});var s=i(4848),r=i(8453);const d={id:"architecture",title:"Architecture"},t=void 0,l={id:"architecture",title:"Architecture",description:"Overview",source:"@site/private-docs/architecture.md",sourceDirName:".",slug:"/architecture",permalink:"/private/architecture",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"architecture",title:"Architecture"},sidebar:"defaultSidebar"},c={},a=[{value:"Overview",id:"overview",level:2},{value:"Core Features",id:"core-features",level:2},{value:"User Management",id:"user-management",level:3},{value:"Threads and Conversations",id:"threads-and-conversations",level:3},{value:"Thread Groups",id:"thread-groups",level:3},{value:"Multi-Modal Context Management",id:"multi-modal-context-management",level:3},{value:"Agent Threads",id:"agent-threads",level:3},{value:"Prompt Template Registry",id:"prompt-template-registry",level:3},{value:"Subscriptions and Access Control",id:"subscriptions-and-access-control",level:3},{value:"Tools Integration",id:"tools-integration",level:3},{value:"Retrieval-Augmented Generation (RAG)",id:"retrieval-augmented-generation-rag",level:3},{value:"Applications and Agent Types",id:"applications-and-agent-types",level:3},{value:"Database Schema",id:"database-schema",level:2},{value:"Entity Overview",id:"entity-overview",level:3},{value:"Entity Diagram",id:"entity-diagram",level:3},{value:"Entity Table",id:"entity-table",level:3},{value:"Entity Attributes",id:"entity-attributes",level:3},{value:"Users",id:"users",level:4},{value:"Applications",id:"applications",level:4},{value:"Agent Types",id:"agent-types",level:4},{value:"Threads",id:"threads",level:4},{value:"Conversations",id:"conversations",level:4},{value:"Thread Groups",id:"thread-groups-1",level:4},{value:"Multi-Modal Contexts",id:"multi-modal-contexts",level:4},{value:"Agent Threads",id:"agent-threads-1",level:4},{value:"Prompt Template Registry",id:"prompt-template-registry-1",level:4},{value:"Models",id:"models",level:4},{value:"Agent Subscriptions",id:"agent-subscriptions",level:4},{value:"Tools",id:"tools",level:4},{value:"Vectors",id:"vectors",level:4}];function h(e){const n={code:"code",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(n.p,{children:'The Jutsu "App Hub" architecture is designed to provide a comprehensive and dynamic platform for creating, managing, and interacting with AI agents and their associated contexts. At the heart of this system is a robust user management framework that allows individuals to seamlessly integrate various functionalities and tools to enhance their interaction with AI models.'}),"\n",(0,s.jsx)(n.h2,{id:"core-features",children:"Core Features"}),"\n",(0,s.jsx)(n.h3,{id:"user-management",children:"User Management"}),"\n",(0,s.jsx)(n.p,{children:"The architecture allows users to:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Create, manage, and interact with multiple threads and agents."}),"\n",(0,s.jsx)(n.li,{children:"Upload and manage multi-modal contexts, including PDFs, images, videos, and audio files."}),"\n",(0,s.jsx)(n.li,{children:"Provide comprehensive and rich data inputs to AI agents, enhancing interaction quality and contextual relevance."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"threads-and-conversations",children:"Threads and Conversations"}),"\n",(0,s.jsx)(n.p,{children:"Users can:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Initiate threads, which are chatbot conversations with selected AI models such as GPT-4 or Claude 3.5."}),"\n",(0,s.jsx)(n.li,{children:"Ensure threads retain long-term memory, enabling users to search through and revisit past conversations."}),"\n",(0,s.jsx)(n.li,{children:"Maintain a cohesive and continuous interaction history with AI agents."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"thread-groups",children:"Thread Groups"}),"\n",(0,s.jsx)(n.p,{children:"The system allows:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Organizing threads into dynamic thread groups, facilitating better management and contextual grouping of conversations."}),"\n",(0,s.jsx)(n.li,{children:"Drawing context from thread groups for future dialogues, enhancing the relevance and continuity of interactions."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"multi-modal-context-management",children:"Multi-Modal Context Management"}),"\n",(0,s.jsx)(n.p,{children:"Users have the ability to:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Upload multi-modal context files and link them to threads or thread groups."}),"\n",(0,s.jsx)(n.li,{children:"Dynamically add or remove files from threads/thread groups, effectively organizing and sharing context."}),"\n",(0,s.jsx)(n.li,{children:"Ensure that AI agents have access to a wide range of contextual information, improving their response accuracy and relevance."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"agent-threads",children:"Agent Threads"}),"\n",(0,s.jsx)(n.p,{children:"The platform supports:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Publishing agent threads as simple prompt-engineered agents."}),"\n",(0,s.jsx)(n.li,{children:"Sharing agent threads via a unique URL, allowing other users to access and interact with the same context and knowledge base."}),"\n",(0,s.jsx)(n.li,{children:"Assigning various access permissions to published agent threads, such as public access or invite-only access."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"prompt-template-registry",children:"Prompt Template Registry"}),"\n",(0,s.jsx)(n.p,{children:"Users can:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Search through a registry of pre-built prompt engineering templates."}),"\n",(0,s.jsx)(n.li,{children:"Load templates into new threads, providing a starting point for creating new agent threads."}),"\n",(0,s.jsx)(n.li,{children:"Publish their own agent threads into the prompt template registry for others to use, fostering collaboration and knowledge sharing."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"subscriptions-and-access-control",children:"Subscriptions and Access Control"}),"\n",(0,s.jsx)(n.p,{children:"The system manages:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"User subscriptions to published agent threads, tracking which users have access to which agents."}),"\n",(0,s.jsx)(n.li,{children:"Access permissions, ensuring that only authorized users can interact with certain agent threads."}),"\n",(0,s.jsx)(n.li,{children:"Subscription management, allowing users to subscribe or unsubscribe from agent threads as needed."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"tools-integration",children:"Tools Integration"}),"\n",(0,s.jsx)(n.p,{children:"Agents in the system can:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Use various tools to perform specific tasks or access external services."}),"\n",(0,s.jsx)(n.li,{children:"Be linked to tools, which are managed and integrated within the agent threads."}),"\n",(0,s.jsx)(n.li,{children:"Enhance their functionality and extend their capabilities through tool integration."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"retrieval-augmented-generation-rag",children:"Retrieval-Augmented Generation (RAG)"}),"\n",(0,s.jsx)(n.p,{children:"The architecture includes:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"A sophisticated RAG system for efficient data retrieval and augmentation."}),"\n",(0,s.jsx)(n.li,{children:"A vector database that stores vectorized representations of documents, conversations, and other data."}),"\n",(0,s.jsx)(n.li,{children:"Enhanced data management and retrieval capabilities, ensuring that AI agents can access and use relevant information effectively."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"applications-and-agent-types",children:"Applications and Agent Types"}),"\n",(0,s.jsx)(n.p,{children:"The system supports:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Different application contexts, allowing for versatile use cases and interactions."}),"\n",(0,s.jsx)(n.li,{children:"Various agent types, enabling users to create and manage different kinds of agents such as chatbot agents, data retrieval agents, and more."}),"\n",(0,s.jsx)(n.li,{children:"A flexible and extensible framework that can adapt to evolving user needs and technological advancements."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"database-schema",children:"Database Schema"}),"\n",(0,s.jsx)(n.h3,{id:"entity-overview",children:"Entity Overview"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"users"}),": Central to the system, mapping all user interactions."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"applications"}),": Represents different application contexts within the agent platform."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"agent_types"}),": Defines different types of agents that can be loaded within applications."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"threads"}),": Represents individual conversations with a model, linked to users, models, applications, and agent types."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"conversations"}),": Represents individual message exchanges within a thread, linked to threads."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"thread_groups"}),": Allows users to organize threads, linked to users and threads."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"files"}),": Manages multi-modal content, linked to users, threads, and thread groups."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"agent_threads"}),": Published threads with prompt engineering, linked to threads and users, with access control."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"prompt_templates"}),": Stores reusable prompt engineering templates, linked to users and threads."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"models"}),": Stores model details, linked to threads."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"agent_subscriptions"}),": Manages user subscriptions to published agent threads."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"tools"}),": Represents tools that agents can use, linked to agent threads."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"vectors"}),": Manages vectorized data for efficient retrieval in the RAG system, linked to various entities."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"entity-diagram",children:"Entity Diagram"}),"\n",(0,s.jsx)(n.p,{children:"The below is an image illustrating the flow of entities and their relationships in the Jutsu App Hub architecture."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Entity Flow Diagram",src:i(8637).A+"",width:"1570",height:"944"})}),"\n",(0,s.jsx)(n.h3,{id:"entity-table",children:"Entity Table"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Table Name"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Primary Key"}),(0,s.jsx)(n.th,{children:"Foreign Keys"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"users"}),(0,s.jsx)(n.td,{children:"Individuals who use the App Hub platform."}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"user_id"})}),(0,s.jsx)(n.td,{children:"-"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"applications"}),(0,s.jsx)(n.td,{children:"Different contexts where various types of agents can be loaded and used."}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"application_id"})}),(0,s.jsx)(n.td,{children:"-"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"agent_types"}),(0,s.jsx)(n.td,{children:"Different kinds of agents supported by the platform."}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"agent_type_id"})}),(0,s.jsx)(n.td,{children:"-"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"threads"}),(0,s.jsx)(n.td,{children:"Containers for entire interaction sessions or topics between a user and an agent."}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"thread_id"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"user_id"}),", ",(0,s.jsx)(n.code,{children:"model_id"}),", ",(0,s.jsx)(n.code,{children:"application_id"}),", ",(0,s.jsx)(n.code,{children:"agent_type_id"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"conversations"}),(0,s.jsx)(n.td,{children:"Individual message exchanges within a thread."}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"conversation_id"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"thread_id"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"thread_groups"}),(0,s.jsx)(n.td,{children:"Collections of threads organized by the user."}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"group_id"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"user_id"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"thread_group_memberships"}),(0,s.jsx)(n.td,{children:"Links threads to thread groups."}),(0,s.jsx)(n.td,{children:"-"}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"group_id"}),", ",(0,s.jsx)(n.code,{children:"thread_id"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"files"}),(0,s.jsx)(n.td,{children:"Files such as PDFs, images, videos, and audio."}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"file_id"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"user_id"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"file_thread_mappings"}),(0,s.jsx)(n.td,{children:"Links files to threads."}),(0,s.jsx)(n.td,{children:"-"}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"file_id"}),", ",(0,s.jsx)(n.code,{children:"thread_id"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"file_group_mappings"}),(0,s.jsx)(n.td,{children:"Links files to thread groups."}),(0,s.jsx)(n.td,{children:"-"}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"file_id"}),", ",(0,s.jsx)(n.code,{children:"group_id"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"agent_threads"}),(0,s.jsx)(n.td,{children:"Published threads with prompt engineering."}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"agent_id"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"thread_id"}),", ",(0,s.jsx)(n.code,{children:"user_id"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"agent_invites"}),(0,s.jsx)(n.td,{children:"Manages invitations to access agent threads."}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"invite_id"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"agent_id"}),", ",(0,s.jsx)(n.code,{children:"invited_user_id"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"prompt_templates"}),(0,s.jsx)(n.td,{children:"Stores reusable prompt engineering templates."}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"template_id"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"user_id"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"prompt_template_usages"}),(0,s.jsx)(n.td,{children:"Links prompt templates to threads where they are used."}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"usage_id"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"template_id"}),", ",(0,s.jsx)(n.code,{children:"thread_id"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"models"}),(0,s.jsx)(n.td,{children:"Represents different AI models available for interaction within threads."}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"model_id"})}),(0,s.jsx)(n.td,{children:"-"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"agent_subscriptions"}),(0,s.jsx)(n.td,{children:"Manages subscriptions of users to published agent threads."}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"subscription_id"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"user_id"}),", ",(0,s.jsx)(n.code,{children:"agent_id"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"tools"}),(0,s.jsx)(n.td,{children:"Represents tools that agents can use."}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"tool_id"})}),(0,s.jsx)(n.td,{children:"-"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"agent_tools"}),(0,s.jsx)(n.td,{children:"Links tools to agent threads."}),(0,s.jsx)(n.td,{children:"-"}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"agent_id"}),", ",(0,s.jsx)(n.code,{children:"tool_id"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"vectors"}),(0,s.jsx)(n.td,{children:"Stores vectorized representations of data for efficient retrieval in the RAG system."}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"vector_id"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"entity_id"})," (ID of associated entity), ",(0,s.jsx)(n.code,{children:"entity_type"})," (Type of the entity, e.g., file, conversation)"]})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"entity-attributes",children:"Entity Attributes"}),"\n",(0,s.jsx)(n.h4,{id:"users",children:"Users"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Definition"}),": Individuals who use the App Hub platform, capable of creating, managing, and interacting with various threads and agents."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"users"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"user_id"})," (Primary Key)"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"username"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"email"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"password_hash"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"created_at"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"updated_at"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"applications",children:"Applications"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Definition"}),": Different contexts within the App Hub where various types of agents can be loaded and used."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"applications"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"application_id"})," (Primary Key)"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"name"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"description"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"created_at"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"updated_at"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"agent-types",children:"Agent Types"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Definition"}),": Different kinds of agents supported by the platform, such as chatbot agents, data retrieval agents, etc."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"agent_types"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"agent_type_id"})," (Primary Key)"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"name"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"description"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"created_at"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"updated_at"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"threads",children:"Threads"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Definition"}),": Containers for entire interaction sessions or topics between a user and an agent, maintaining the context of the conversation."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"threads"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"thread_id"})," (Primary Key)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"user_id"})," (Foreign Key referencing users)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"model_id"})," (Foreign Key referencing models)"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"title"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"created_at"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"updated_at"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"application_id"})," (Foreign Key referencing applications)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"agent_type_id"})," (Foreign Key referencing agent_types)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"conversations",children:"Conversations"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Definition"}),": Individual message exchanges within a thread, representing the dialogue between a user and an agent."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"conversations"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"conversation_id"})," (Primary Key)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"thread_id"})," (Foreign Key referencing threads)"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"message"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"timestamp"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"role"})," (user, assistant)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"thread-groups-1",children:"Thread Groups"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Definition"}),": Collections of threads organized by the user, allowing for better management and contextual grouping of conversations."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"thread_groups"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"group_id"})," (Primary Key)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"user_id"})," (Foreign Key referencing users)"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"name"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"description"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"created_at"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"updated_at"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"thread_group_memberships"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"group_id"})," (Foreign Key referencing thread_groups)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"thread_id"})," (Foreign Key referencing threads)"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"added_at"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"multi-modal-contexts",children:"Multi-Modal Contexts"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Definition"}),": Files such as PDFs, images, videos, and audio that users can upload and link to threads or thread groups, providing additional context for conversations."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"files"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"file_id"})," (Primary Key)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"user_id"})," (Foreign Key referencing users)"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"file_name"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"file_type"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"file_url"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"uploaded_at"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"file_thread_mappings"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"file_id"})," (Foreign Key referencing files)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"thread_id"})," (Foreign Key referencing threads)"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"added_at"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"file_group_mappings"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"file_id"})," (Foreign Key referencing files)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"group_id"})," (Foreign Key referencing thread_groups)"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"added_at"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"agent-threads-1",children:"Agent Threads"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Definition"}),": Published threads with prompt engineering that can be shared and accessed by other users, allowing for collaborative use and extension of conversation contexts."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"agent_threads"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"agent_id"})," (Primary Key)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"thread_id"})," (Foreign Key referencing threads)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"user_id"})," (Foreign Key referencing users)"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"is_published"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"access_type"})," (public, invite-only)"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"created_at"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"updated_at"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"unique_url"})," (Unique URL generated from agent_id, thread_id, and user_id)"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"agent_invites"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"invite_id"})," (Primary Key)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"agent_id"})," (Foreign Key referencing agent_threads)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"invited_user_id"})," (Foreign Key referencing users)"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"invited_at"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"prompt-template-registry-1",children:"Prompt Template Registry"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Definition"}),": Stores reusable prompt engineering templates that users can search and load into new thread instances, providing a starting point for creating new agents."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"prompt_templates"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"template_id"})," (Primary Key)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"user_id"})," (Foreign Key referencing users)"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"title"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"description"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"prompt"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"created_at"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"updated_at"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"prompt_template_usages"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"usage_id"})," (Primary Key)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"template_id"})," (Foreign Key referencing prompt_templates)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"thread_id"})," (Foreign Key referencing threads)"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"used_at"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"models",children:"Models"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Definition"}),": Represents different AI models available for interaction within threads, such as GPT-4, Claude 3.5, etc."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"models"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"model_id"})," (Primary Key)"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"name"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"version"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"description"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"created_at"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"updated_at"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"agent-subscriptions",children:"Agent Subscriptions"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Definition"}),": Manages subscriptions of users to published agent threads, tracking which users have access to which agents."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"agent_subscriptions"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"subscription_id"})," (Primary Key)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"user_id"})," (Foreign Key referencing users)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"agent_id"})," (Foreign Key referencing agent_threads)"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"subscribed_at"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"tools",children:"Tools"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Definition"}),": Represents tools that agents can use, enabling them to perform specific tasks or access external services."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"tools"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"tool_id"})," (Primary Key)"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"name"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"description"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"created_at"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"updated_at"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"agent_tools"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"agent_id"})," (Foreign Key referencing agent_threads)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"tool_id"})," (Foreign Key referencing tools)"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"added_at"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"vectors",children:"Vectors"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Definition"}),": Stores vectorized representations of documents, conversations, and other data to enable efficient retrieval and augmentation."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"vectors"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"vector_id"})," (Primary Key)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"entity_id"})," (ID of the associated entity, e.g., file_id, conversation_id)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"entity_type"})," (Type of the entity, e.g., file, conversation)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"vector"})," (Vector representation of the data)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"source"})," (Source of the data, e.g., user-uploaded, generated by agent)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"embedding_model"})," (Model used to generate the vector, e.g., GPT-4, BERT)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"embedding_version"})," (Version of the embedding model)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"embedding_type"})," (Type of embedding, e.g., text, image, audio)"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"created_at"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"updated_at"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"version"})," (Version of the vector representation)"]}),"\n"]}),"\n"]}),"\n"]})]})}function o(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8637:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/architecture_database_flowchart-f00c63a4ef7a2f4ffee045acd60202d3.png"},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>l});var s=i(6540);const r={},d=s.createContext(r);function t(e){const n=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),s.createElement(d.Provider,{value:n},e.children)}}}]);